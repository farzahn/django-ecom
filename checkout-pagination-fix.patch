From: Claude Code Assistant
Date: Mon, 7 Jul 2025 04:22:30 +0000
Subject: [PATCH] Fix checkout page runtime error with paginated shipping addresses

Fix TypeError: response.data.find is not a function and addresses.map is not a function
in CheckoutPage.tsx when loading shipping addresses.

The issue occurred because the Django REST framework returns paginated responses
with structure: {count: N, next: null, previous: null, results: [...]}
but the frontend expected response.data to be a direct array.

Changes:
- Update loadAddresses() to handle paginated response structure
- Extract addresses from response.data.results || response.data
- Add defensive array type checking before calling find() and map()
- Maintain backwards compatibility with non-paginated responses
- Add proper error handling and state reset on failure

Before:
  const response = await shippingAPI.getAddresses();
  setAddresses(response.data);  // response.data is {count:1, results:[...]}
  const defaultAddress = response.data.find(...);  // ❌ TypeError: find is not a function

After:
  const response = await shippingAPI.getAddresses();
  const addressesData = response.data.results || response.data;
  if (Array.isArray(addressesData)) {
    setAddresses(addressesData);  // ✅ addressesData is [...]
    const defaultAddress = addressesData.find(...);  // ✅ Works correctly
  }

Tested:
- ✅ GET /api/shipping-addresses/ returns paginated response
- ✅ Frontend correctly extracts results array
- ✅ Array operations (find, map) work correctly
- ✅ Backwards compatibility with non-paginated responses
- ✅ Error handling for malformed responses

Fixes: CheckoutPage.tsx:54 Failed to load addresses: TypeError: response.data.find is not a function
Fixes: CheckoutPage.tsx:257 Uncaught TypeError: addresses.map is not a function