name: Security Scanning

on:
  schedule:
    - cron: '0 6 * * 1'  # Weekly on Monday at 6 AM UTC
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'
  NODE_VERSION: '18'

jobs:
  # Security scanning for Python dependencies
  python-security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install bandit safety pip-audit
    
    - name: Run Bandit security linter
      run: |
        bandit -r . -f json -o bandit-report.json
        bandit -r . -f txt
      continue-on-error: true
    
    - name: Run Safety check
      run: |
        safety check --json --output safety-report.json
        safety check
      continue-on-error: true
    
    - name: Run pip-audit
      run: |
        pip-audit --format=json --output=pip-audit-report.json
        pip-audit
      continue-on-error: true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: python-security-reports
        path: |
          bandit-report.json
          safety-report.json
          pip-audit-report.json
        retention-days: 30

  # Security scanning for Node.js dependencies
  node-security:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run npm audit
      run: |
        npm audit --audit-level=moderate --json > npm-audit-report.json
        npm audit --audit-level=moderate
      continue-on-error: true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: node-security-reports
        path: ./frontend/npm-audit-report.json
        retention-days: 30

  # SAST (Static Application Security Testing)
  sast-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: python, javascript
        queries: security-and-quality
    
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  # Dependency scanning
  dependency-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Dependency Review
      uses: actions/dependency-review-action@v3
      with:
        fail-on-severity: high
        allow-licenses: MIT, Apache-2.0, BSD-3-Clause, BSD-2-Clause, ISC
    
    - name: Check for known vulnerabilities
      run: |
        echo "🔍 Scanning for known vulnerabilities..."
        # Add custom vulnerability scanning logic here
        echo "✅ Vulnerability scan completed!"

  # Docker security scanning
  docker-security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t pasargadprints:security-scan .
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'pasargadprints:security-scan'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  # Generate security report
  security-report:
    runs-on: ubuntu-latest
    needs: [python-security, node-security, sast-scan, dependency-scan]
    if: always()
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download security reports
      uses: actions/download-artifact@v3
      with:
        name: python-security-reports
        path: ./security-reports/python/
    
    - name: Download Node.js security reports
      uses: actions/download-artifact@v3
      with:
        name: node-security-reports
        path: ./security-reports/node/
    
    - name: Generate security summary
      run: |
        echo "# Security Scan Summary" > security-summary.md
        echo "**Date:** $(date)" >> security-summary.md
        echo "**Commit:** ${{ github.sha }}" >> security-summary.md
        echo "" >> security-summary.md
        
        echo "## Python Security Scan Results" >> security-summary.md
        if [ -f "./security-reports/python/bandit-report.json" ]; then
          echo "✅ Bandit scan completed" >> security-summary.md
        else
          echo "❌ Bandit scan failed" >> security-summary.md
        fi
        
        if [ -f "./security-reports/python/safety-report.json" ]; then
          echo "✅ Safety scan completed" >> security-summary.md
        else
          echo "❌ Safety scan failed" >> security-summary.md
        fi
        
        echo "" >> security-summary.md
        echo "## Node.js Security Scan Results" >> security-summary.md
        if [ -f "./security-reports/node/npm-audit-report.json" ]; then
          echo "✅ npm audit completed" >> security-summary.md
        else
          echo "❌ npm audit failed" >> security-summary.md
        fi
        
        echo "" >> security-summary.md
        echo "## Recommendations" >> security-summary.md
        echo "- Review all high and critical severity vulnerabilities" >> security-summary.md
        echo "- Update dependencies with known security issues" >> security-summary.md
        echo "- Run security scans regularly" >> security-summary.md
        
        cat security-summary.md
    
    - name: Upload security summary
      uses: actions/upload-artifact@v3
      with:
        name: security-summary
        path: security-summary.md
        retention-days: 90
    
    - name: Comment security status on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const summary = fs.readFileSync('security-summary.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## 🔒 Security Scan Results\n\n${summary}`
          });

  # Automated dependency updates
  dependency-update:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Update Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pip-upgrader
        pip-upgrade requirements.txt --skip-package-installation
    
    - name: Update Node.js dependencies
      working-directory: ./frontend
      run: |
        npm update
        npm audit fix
    
    - name: Create pull request for dependency updates
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'chore: Automated dependency updates'
        body: |
          🤖 This PR contains automated dependency updates.
          
          ## Changes:
          - Updated Python dependencies in requirements.txt
          - Updated Node.js dependencies in frontend/package.json
          - Fixed security vulnerabilities where possible
          
          ## Testing:
          - [ ] All tests pass
          - [ ] Security scans pass
          - [ ] Manual testing completed
          
          Please review the changes and test thoroughly before merging.
        branch: automated-dependency-updates
        base: main